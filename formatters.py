from models import StockData
from config import ADX_STRONG_TREND_THRESHOLD, SUPPORTED_STOCKS


class MessageFormatter:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    @staticmethod
    def format_stock_message(data: StockData) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–∫—Ü–∏–∏"""
        
        adx_strength = "–°–∏–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥" if data.technical.adx > ADX_STRONG_TREND_THRESHOLD else "–°–ª–∞–±—ã–π —Ç—Ä–µ–Ω–¥"
        
        message = f"""{data.info.emoji} <b>{data.info.ticker} - {data.info.name}</b>

üí∞ <b>–¶–µ–Ω–∞:</b> {data.price.current_price:.2f} ‚ÇΩ
üìä <b>EMA20:</b> {data.technical.ema20:.2f} ‚ÇΩ

üìà <b>ADX:</b> {data.technical.adx:.2f} ({adx_strength})
<b>DI+:</b> {data.technical.di_plus:.2f} | <b>DI-:</b> {data.technical.di_minus:.2f}"""
        
        return message
    
    @staticmethod
    def format_welcome_message() -> str:
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        return """üëã –ü—Ä–∏–≤–µ—Ç! –Ø –†–µ–≤—É—â–∏–π –∫–æ—Ç—ë–Ω–æ–∫, –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Ç–µ–±–µ —Å–∏–≥–Ω–∞–ª—ã –æ —Ç—Ä–µ–Ω–¥–æ–≤—ã—Ö –¥–≤–∏–∂–µ–Ω–∏—è—Ö —Ä—ã–Ω–∫–∞ –∞–∫—Ü–∏–π üê±

üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/stocks - –í—ã–±—Ä–∞—Ç—å –∞–∫—Ü–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞"""
    
    @staticmethod
    def format_stocks_selection() -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∞–∫—Ü–∏–∏"""
        return "üìà –í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ü–∏—é –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:"
    
    @staticmethod
    def format_error_message(error_type: str = "general") -> str:
        """–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö"""
        error_messages = {
            "no_data": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            "insufficient_data": "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            "general": "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö."
        }
        return error_messages.get(error_type, error_messages["general"])
    
    @staticmethod
    def format_loading_message(ticker: str = None) -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏"""
        if ticker:
            return f"‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ {ticker}..."
        return "‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ..."
