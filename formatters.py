from models import StockData
from config import ADX_STRONG_TREND_THRESHOLD, SUPPORTED_STOCKS


class MessageFormatter:
    """–ö–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    @staticmethod
    def format_stock_message(data: StockData) -> str:
        """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –∞–∫—Ü–∏–∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –î–í–ê –≤–∞—Ä–∏–∞–Ω—Ç–∞ ADX"""
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏–ª—É —Ç—Ä–µ–Ω–¥–∞ –¥–ª—è –¥–≤—É—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
        adx_standard_strength = "–°–∏–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥" if data.technical.adx_standard > ADX_STRONG_TREND_THRESHOLD else "–°–ª–∞–±—ã–π —Ç—Ä–µ–Ω–¥"
        adx_pine_strength = "–°–∏–ª—å–Ω—ã–π —Ç—Ä–µ–Ω–¥" if data.technical.adx_pinescript > ADX_STRONG_TREND_THRESHOLD else "–°–ª–∞–±—ã–π —Ç—Ä–µ–Ω–¥"
        
        message = f"""{data.info.emoji} <b>{data.info.ticker} - {data.info.name}</b>

üí∞ <b>–¶–µ–Ω–∞:</b> {data.price.current_price:.2f} ‚ÇΩ
üìä <b>EMA20:</b> {data.technical.ema20:.2f} ‚ÇΩ

üîß <b>ADX ‚Äî pandas-ta (RMA):</b>
- <b>ADX:</b> {data.technical.adx_standard:.2f} ({adx_standard_strength})
- <b>DI+:</b> {data.technical.di_plus_standard:.2f} | <b>DI-:</b> {data.technical.di_minus_standard:.2f}

üìà <b>ADX ‚Äî Pine Script (sma):</b>
- <b>ADX:</b> {data.technical.adx_pinescript:.2f} ({adx_pine_strength})
- <b>DI+:</b> {data.technical.di_plus_pinescript:.2f} | <b>DI-:</b> {data.technical.di_minus_pinescript:.2f}"""
        
        return message
    
    @staticmethod
    def format_welcome_message() -> str:
        """–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""
        return """üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π.

üìä <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
/stocks - –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –∞–∫—Ü–∏–π
/stock TICKER - –î–∞–Ω–Ω—ã–µ –ø–æ –ª—é–±–æ–π –∞–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: /stock SBER)

<b>–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º –∞–∫—Ü–∏—è–º:</b>
/sber - –°–±–µ—Ä–±–∞–Ω–∫ üè¶
/gazp - –ì–∞–∑–ø—Ä–æ–º üõ¢Ô∏è
/lkoh - –õ–£–ö–û–ô–õ ‚õΩ
/vtbr - –í–¢–ë üèõÔ∏è
/head - Headhunter üßë‚Äçüíº

<i>–î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é —Å –ú–æ—Å–∫–æ–≤—Å–∫–æ–π –±–∏—Ä–∂–∏ —á–µ—Ä–µ–∑ MOEX API</i>"""
    
    @staticmethod
    def format_stocks_list() -> str:
        """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö –∞–∫—Ü–∏–π"""
        message = "üìà <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∞–∫—Ü–∏–∏:</b>\n\n"
        
        for ticker, info in SUPPORTED_STOCKS.items():
            message += f"{info['emoji']} <b>{ticker}</b> - {info['name']}\n"
        
        message += f"\nüí° <b>–í—Å–µ–≥–æ –∞–∫—Ü–∏–π:</b> {len(SUPPORTED_STOCKS)}"
        message += "\n\n<b>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:</b>\n"
        message += "‚Ä¢ <code>/stock TICKER</code> - –¥–∞–Ω–Ω—ã–µ –ø–æ –ª—é–±–æ–π –∞–∫—Ü–∏–∏\n"
        message += f"‚Ä¢ <code>/{list(SUPPORTED_STOCKS.keys())[0].lower()}</code> - –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø"
        
        return message
    
    @staticmethod
    def format_error_message(error_type: str = "general") -> str:
        """–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö"""
        error_messages = {
            "no_data": "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å MOEX API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            "insufficient_data": "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            "general": "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö."
        }
        return error_messages.get(error_type, error_messages["general"])
    
    @staticmethod
    def format_loading_message(ticker: str = None) -> str:
        """–°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏"""
        if ticker:
            return f"‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ {ticker} —Å MOEX..."
        return "‚è≥ –ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ —Å MOEX..."
